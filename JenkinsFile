pipeline
{
    agent any
    environment
    {
        registryCredential = "DockerHubCred"
        dockerImage = ""
    }
    stages
    {
        stage('Clone Git'){
            steps{
                git branch: 'master',
                url:'https://github.com/ManishReddyK/SPE_Final_Proj.git'
            }
        }
        stage('Build Frontend Image'){
            steps
            {
                dir("frontend/")
                {
                    sh "docker build -t manish3693/frontend:latest ."
                }
            }
        }
        stage('Build Backend Image'){
            steps
            {
                dir("backend/")
                {
                    sh "mvn clean install"
                    sh "docker build -t manish3693/backend:latest ."
                }
            }
        }
        stage('Frontend DockerHub Image Push')
        {
            steps
            {
                script
                {
                    docker.withRegistry('', registryCredential)
                    {
                        sh "docker push manish3693/frontend:latest"
                    }
                }
            }
        }
        stage('Backend DockerHub Image Push')
        {
            steps
            {
                script
                {
                    docker.withRegistry('', registryCredential)
                    {
                        sh "docker push manish3693/backend:latest"
                    }
                }
            }
        }
        
        stage('Testing') {
            steps {
                dir("backend") {
                    // Run AdminControllerTest.java
                    sh "mvn test -Dtest=AdminControllerTest"
                    
                    // Run CourierDeliveryApplicationTests.java
                    sh "mvn test -Dtest=CourierDeliveryApplicationTests"
                }
            }
        }

        
        stage('Ansible Deployment'){
            steps{
                ansiblePlaybook becomeUser: null,
                colorized: true,
                credentialsId: 'localhost',
                disableHostKeyChecking: true,
                installation: 'Ansible',
                inventory: 'inventory',
                playbook: 'playbook.yml',
                sudoUser: null
            }
        }
    }
}